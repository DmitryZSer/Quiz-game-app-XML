<TestQuestions>
  <Topic Name="Операции">
    <Level Number="1">
      <Question>
        <Text>Сколько будет 2 + 2?</Text>
        <Answer IsCorrect="true">4</Answer>
        <Answer IsCorrect="false">3</Answer>
        <Answer IsCorrect="false">5</Answer>
        <Answer IsCorrect="false">6</Answer>
      </Question>
      <Question>
        <Text>Чему равно 3 * 4?</Text>
        <Answer IsCorrect="true">12</Answer>
        <Answer IsCorrect="false">10</Answer>
        <Answer IsCorrect="false">15</Answer>
        <Answer IsCorrect="false">8</Answer>
      </Question>
      <Question>
        <Text>Какое значение имеет выражение 10 - 5?</Text>
        <Answer IsCorrect="true">5</Answer>
        <Answer IsCorrect="false">6</Answer>
        <Answer IsCorrect="false">4</Answer>
        <Answer IsCorrect="false">7</Answer>
      </Question>
      <Question>
        <Text>Что такое операция сравнения?</Text>
        <Answer IsCorrect="true">Операция для сравнения</Answer>
        <Answer IsCorrect="false">Да</Answer>
        <Answer IsCorrect="false">Что?</Answer>
      </Question>
    </Level>
    <Level Number="2">
      <Question>
        <Text>Сколько будет 10 / 2?</Text>
        <Answer IsCorrect="true">5</Answer>
        <Answer IsCorrect="false">4</Answer>
        <Answer IsCorrect="false">6</Answer>
        <Answer IsCorrect="false">3</Answer>
      </Question>
      <Question>
        <Text>Чему равно 7 * 8?</Text>
        <Answer IsCorrect="true">56</Answer>
        <Answer IsCorrect="false">60</Answer>
        <Answer IsCorrect="false">49</Answer>
        <Answer IsCorrect="false">64</Answer>
      </Question>
      <Question>
        <Text>Какое значение имеет выражение 20 - 7?</Text>
        <Answer IsCorrect="true">13</Answer>
        <Answer IsCorrect="false">15</Answer>
        <Answer IsCorrect="false">12</Answer>
        <Answer IsCorrect="false">10</Answer>
      </Question>
    </Level>
    <Level Number="3">
      <Question>
        <Text>Сколько будет 4 * 7?</Text>
        <Answer IsCorrect="true">28</Answer>
        <Answer IsCorrect="false">24</Answer>
        <Answer IsCorrect="false">30</Answer>
        <Answer IsCorrect="false">35</Answer>
      </Question>
      <Question>
        <Text>Чему равно 15 / 3?</Text>
        <Answer IsCorrect="true">5</Answer>
        <Answer IsCorrect="false">4</Answer>
        <Answer IsCorrect="false">6</Answer>
        <Answer IsCorrect="false">3</Answer>
      </Question>
      <Question>
        <Text>Какое значение имеет выражение 50 - 20?</Text>
        <Answer IsCorrect="true">30</Answer>
        <Answer IsCorrect="false">25</Answer>
        <Answer IsCorrect="false">35</Answer>
        <Answer IsCorrect="false">40</Answer>
      </Question>
    </Level>
  </Topic>
  <Topic Name="Ветвления">
    <Level Number="1">
      <Question>
        <Text>Что будет результатом выражения 5 &gt; 3?</Text>
        <Answer IsCorrect="true">true</Answer>
        <Answer IsCorrect="false">false</Answer>
      </Question>
      <Question>
        <Text>Что будет результатом выражения 10 == 10?</Text>
        <Answer IsCorrect="true">true</Answer>
        <Answer IsCorrect="false">false</Answer>
      </Question>
      <Question>
        <Text>Какой оператор используется для проверки условия ветвления в C#?</Text>
        <Answer IsCorrect="true">if</Answer>
        <Answer IsCorrect="false">for</Answer>
        <Answer IsCorrect="false">while</Answer>
      </Question>
    </Level>
    <Level Number="2">
      <Question>
        <Text>Какой оператор используется для проверки нескольких условий в C#?</Text>
        <Answer IsCorrect="true">if-else</Answer>
        <Answer IsCorrect="false">switch</Answer>
        <Answer IsCorrect="false">for</Answer>
      </Question>
      <Question>
        <Text>Что будет результатом выражения 7 &gt;= 7?</Text>
        <Answer IsCorrect="true">true</Answer>
        <Answer IsCorrect="false">false</Answer>
      </Question>
      <Question>
        <Text>Какой оператор используется для проверки нескольких условий в C#?</Text>
        <Answer IsCorrect="true">if-else</Answer>
        <Answer IsCorrect="false">switch</Answer>
        <Answer IsCorrect="false">for</Answer>
      </Question>
    </Level>
    <Level Number="3">
      <Question>
        <Text>Какой оператор используется для проверки нескольких условий в C#?</Text>
        <Answer IsCorrect="true">if-else</Answer>
        <Answer IsCorrect="false">switch</Answer>
        <Answer IsCorrect="false">for</Answer>
      </Question>
      <Question>
        <Text>Какой оператор используется для проверки нескольких условий в C#?</Text>
        <Answer IsCorrect="true">if-else</Answer>
        <Answer IsCorrect="false">switch</Answer>
        <Answer IsCorrect="false">for</Answer>
      </Question>
      <Question>
        <Text>Какой оператор используется для проверки нескольких условий в C#?</Text>
        <Answer IsCorrect="true">if-else</Answer>
        <Answer IsCorrect="false">switch</Answer>
        <Answer IsCorrect="false">for</Answer>
      </Question>
    </Level>
  </Topic>
  <Topic Name="Циклы">
    <Level Number="1">
      <Question>
        <Text>Какой оператор используется для повторения действий в C#?</Text>
        <Answer IsCorrect="true">for</Answer>
        <Answer IsCorrect="false">if</Answer>
        <Answer IsCorrect="false">while</Answer>
      </Question>
      <Question>
        <Text>Какой оператор используется для повторения действий, пока выполняется условие, в C#?</Text>
        <Answer IsCorrect="true">while</Answer>
        <Answer IsCorrect="false">for</Answer>
        <Answer IsCorrect="false">if</Answer>
      </Question>
      <Question>
        <Text>Какое значение имеет переменная i в цикле for: for(int i = 0; i &lt; 5; i++)?</Text>
        <Answer IsCorrect="true">0, 1, 2, 3, 4</Answer>
        <Answer IsCorrect="false">1, 2, 3, 4, 5</Answer>
        <Answer IsCorrect="false">1, 2, 3, 4, 5, 6</Answer>
      </Question>
    </Level>
    <Level Number="2">
      <Question>
        <Text>Сколько итераций выполнится в цикле for: for(int i = 0; i &lt;= 10; i += 2)?</Text>
        <Answer IsCorrect="true">6</Answer>
        <Answer IsCorrect="false">5</Answer>
        <Answer IsCorrect="false">7</Answer>
      </Question>
      <Question>
        <Text>Какой оператор используется для выхода из цикла в C#?</Text>
        <Answer IsCorrect="true">break</Answer>
        <Answer IsCorrect="false">continue</Answer>
        <Answer IsCorrect="false">return</Answer>
      </Question>
      <Question>
        <Text>Какой оператор используется для продолжения выполнения цикла в C#?</Text>
        <Answer IsCorrect="true">continue</Answer>
        <Answer IsCorrect="false">break</Answer>
        <Answer IsCorrect="false">return</Answer>
      </Question>
    </Level>
    <Level Number="3">
      <Question>
        <Text>Сколько итераций выполнится в цикле for: for(int i = 10; i &gt; 0; i--)?</Text>
        <Answer IsCorrect="true">10</Answer>
        <Answer IsCorrect="false">9</Answer>
        <Answer IsCorrect="false">11</Answer>
      </Question>
      <Question>
        <Text>Какой оператор используется для продолжения выполнения цикла в C#?</Text>
        <Answer IsCorrect="true">continue</Answer>
        <Answer IsCorrect="false">break</Answer>
        <Answer IsCorrect="false">return</Answer>
      </Question>
      <Question>
        <Text>Какой оператор используется для выхода из всех вложенных циклов в C#?</Text>
        <Answer IsCorrect="true">goto</Answer>
        <Answer IsCorrect="false">return</Answer>
        <Answer IsCorrect="false">break</Answer>
      </Question>
    </Level>
  </Topic>
  <Topic Name="Объектно-ориентированное программирование">
    <Level Number="1">
      <Question>
        <Text>Что такое класс в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Шаблон для создания объектов, который содержит состояние и поведение</Answer>
        <Answer IsCorrect="false">Переменная, содержащая данные</Answer>
        <Answer IsCorrect="false">Условие, проверяемое на истинность</Answer>
      </Question>
      <Question>
        <Text>Что такое объект в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Экземпляр класса, который имеет состояние и поведение</Answer>
        <Answer IsCorrect="false">Метод, выполняющий действия</Answer>
        <Answer IsCorrect="false">Оператор, выполняющий присваивание</Answer>
      </Question>
      <Question>
        <Text>Что такое наследование в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Возможность создания нового класса на основе существующего</Answer>
        <Answer IsCorrect="false">Процесс создания объекта</Answer>
        <Answer IsCorrect="false">Процесс передачи данных между классами</Answer>
      </Question>
    </Level>
    <Level Number="2">
      <Question>
        <Text>Что такое инкапсуляция в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Сокрытие деталей реализации и доступа к данным внутри класса</Answer>
        <Answer IsCorrect="false">Процесс создания объекта</Answer>
        <Answer IsCorrect="false">Процесс передачи данных между классами</Answer>
      </Question>
      <Question>
        <Text>Что такое полиморфизм в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Возможность использования одного имени для нескольких методов</Answer>
        <Answer IsCorrect="false">Возможность создания нового класса на основе существующего</Answer>
        <Answer IsCorrect="false">Сокрытие деталей реализации и доступа к данным внутри класса</Answer>
      </Question>
      <Question>
        <Text>Что такое абстракция в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Представление объектов в виде моделей или концепций</Answer>
        <Answer IsCorrect="false">Процесс создания объекта</Answer>
        <Answer IsCorrect="false">Процесс передачи данных между классами</Answer>
      </Question>
    </Level>
    <Level Number="3">
      <Question>
        <Text>Что такое интерфейс в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Контракт, определяющий набор методов, которые должен реализовать класс</Answer>
        <Answer IsCorrect="false">Метод, выполняющий действия</Answer>
        <Answer IsCorrect="false">Оператор, выполняющий присваивание</Answer>
      </Question>
      <Question>
        <Text>Что такое композиция в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Включение объектов одного класса в другой класс</Answer>
        <Answer IsCorrect="false">Возможность создания нового класса на основе существующего</Answer>
        <Answer IsCorrect="false">Процесс передачи данных между классами</Answer>
      </Question>
      <Question>
        <Text>Что такое наследование в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Возможность создания нового класса на основе существующего</Answer>
        <Answer IsCorrect="false">Процесс создания объекта</Answer>
        <Answer IsCorrect="false">Процесс передачи данных между классами</Answer>
      </Question>
    </Level>
  </Topic>
  <!---->
  <Topic Name="Изучение программирования. Объектно ориентированное программирование">
    <Level Number="1">
      <Question>
        <Text>Что такое объектно-ориентированное программирование?</Text>
        <Answer IsCorrect="false">Процесс передачи данных от одного объекта к другому</Answer>
        <Answer IsCorrect="false">Механизм, позволяющий скрыть детали реализации и предоставить только интерфейс доступа к данным</Answer>
        <Answer IsCorrect="true">Способ программирования, в котором основными концепциями являются объекты и классы</Answer>
        <Answer IsCorrect="false">Возможность использовать свойства и методы одного класса в другом классе</Answer>
      </Question>
      <Question>
        <Text>Что такое класс в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Структура данных, описывающая состояние и поведение объектов</Answer>
        <Answer IsCorrect="false">Переменная, хранящая значение определенного типа данных</Answer>
        <Answer IsCorrect="false">Участок кода, выполняющий определенную задачу</Answer>
      </Question>
      <Question>
        <Text>Как создать экземпляр класса в C#?</Text>
        <Answer IsCorrect="true">MyClass myObject = new MyClass();</Answer>
        <Answer IsCorrect="false">MyClass myObject = MyClass();</Answer>
        <Answer IsCorrect="false">myObject = new MyClass();</Answer>
      </Question>
      <Question>
        <Text>Что такое объект в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Экземпляр класса, обладающий определенными свойствами и методами</Answer>
        <Answer IsCorrect="false">Функция, возвращающая значение определенного типа данных</Answer>
        <Answer IsCorrect="false">Участок кода, выполняющий определенную задачу</Answer>
      </Question>
      <Question>
        <Text>Что такое абстрактный класс?</Text>
        <Answer IsCorrect="true">Класс, который нельзя использовать для создания экземпляров, но можно использовать в качестве базового класса для других классов</Answer>
        <Answer IsCorrect="false">Класс, состоящий только из абстрактных методов</Answer>
        <Answer IsCorrect="false">Класс, не имеющий никаких свойств и методов</Answer>
      </Question>
      <Question>
        <Text>В чем отличие интерфейса от абстрактного класса?</Text>
        <Answer IsCorrect="true">Интерфейс может содержать только абстрактные методы, а абстрактный класс может содержать как абстрактные, так и обычные методы</Answer>
        <Answer IsCorrect="false">Интерфейс может содержать только обычные методы, а абстрактный класс может содержать как абстрактные, так и обычные методы</Answer>
        <Answer IsCorrect="false">Интерфейс может содержать только свойства, а абстрактный класс может содержать как свойства, так и методы</Answer>
      </Question>
      <Question>
        <Text>Что такое конструктор класса?</Text>
        <Answer IsCorrect="true">Метод класса, вызываемый для создания нового объекта</Answer>
        <Answer IsCorrect="false">Специальный метод класса, вызываемый при уничтожении объекта</Answer>
        <Answer IsCorrect="false">Метод класса, вызываемый для изменения состояния объекта</Answer>
      </Question>
    </Level>
    <Level Number="2">
      <Question>
        <Text>Что такое наследование в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Механизм, позволяющий одному классу получать свойства и методы другого класса</Answer>
        <Answer IsCorrect="false">Процесс передачи данных от одного объекта к другому</Answer>
        <Answer IsCorrect="false">Способ программирования, в котором основными концепциями являются объекты и классы</Answer>
        <Answer IsCorrect="false">Возможность использовать свойства и методы одного класса в другом классе</Answer>
      </Question>
      <Question>
        <Text>Что такое полиморфизм в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Возможность объектов с одинаковой спецификацией обладать различной реализацией</Answer>
        <Answer IsCorrect="false">Возможность одного класса наследовать свойства и методы другого класса</Answer>
        <Answer IsCorrect="false">Механизм, позволяющий скрыть детали реализации и предоставить только интерфейс доступа к данным</Answer>
      </Question>
      <Question>
        <Text>Что такое инкапсуляция в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Принцип, согласно которому данные объекта скрыты и могут быть доступны только через методы класса</Answer>
        <Answer IsCorrect="false">Процесс передачи данных от одного объекта к другому</Answer>
        <Answer IsCorrect="false">Возможность использовать свойства и методы одного класса в другом классе</Answer>
      </Question>
      <Question>
        <Text>Что такое перегрузка методов в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Возможность создания нескольких методов с одинаковым именем, но различающихся по количеству или типу параметров</Answer>
        <Answer IsCorrect="false">Процесс передачи данных от одного объекта к другому</Answer>
        <Answer IsCorrect="false">Способ программирования, в котором основными концепциями являются объекты и классы</Answer>
      </Question>
      <Question>
        <Text>Что такое статический метод в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Метод класса, который можно вызывать без создания экземпляра класса</Answer>
        <Answer IsCorrect="false">Процесс передачи данных от одного объекта к другому</Answer>
        <Answer IsCorrect="false">Способ программирования, в котором основными концепциями являются объекты и классы</Answer>
      </Question>
      <Question>
        <Text>Что такое интерфейс в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Список методов и свойств, которые класс обязан реализовать, если реализует данный интерфейс</Answer>
        <Answer IsCorrect="false">Способ программирования, в котором основными концепциями являются объекты и классы</Answer>
        <Answer IsCorrect="false">Механизм, позволяющий скрыть детали реализации и предоставить только интерфейс доступа к данным</Answer>
      </Question>
      <Question>
        <Text>
					Какие преимущества предоставляет использование наследования?
				</Text>
        <Answer IsCorrect="true">Повторное использование кода, увеличение уровня абстракции, упрощение структуры программы</Answer>
        <Answer IsCorrect="false">Возможность создания нескольких методов с одинаковым именем, но различающихся по количеству или типу параметров</Answer>
        <Answer IsCorrect="false">Возможность создания нескольких объектов одного класса</Answer>
      </Question>
      <Question>
        <Text>Какие преимущества предоставляет использование интерфейсов?</Text>
        <Answer IsCorrect="true">Реализация множественного наследования, повышение гибкости программы, стандартизация интерфейсов</Answer>
        <Answer IsCorrect="false">Возможность создания нескольких объектов одного класса</Answer>
        <Answer IsCorrect="false">Возможность создания нескольких методов с одинаковым именем, но различающихся по количеству или типу параметров</Answer>
      </Question>
      <Question>
        <Text>Какие принципы лежат в основе объектно-ориентированного программирования?</Text>
        <Answer IsCorrect="true">Наследование, инкапсуляция, полиморфизм</Answer>
        <Answer IsCorrect="false">Способ программирования, в котором основными концепциями являются объекты и классы</Answer>
        <Answer IsCorrect="false">Процесс передачи данных от одного объекта к другому</Answer>
      </Question>
      <Question>
        <Text>Что такое абстрактный метод в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Метод, объявленный в абстрактном классе и не имеющий реализации, который должен быть переопределен в производных классах</Answer>
        <Answer IsCorrect="false">Метод, который можно вызывать без создания экземпляра класса</Answer>
        <Answer IsCorrect="false">Метод, который нельзя использовать для создания экземпляров класса, но можно использовать в качестве базового класса для других классов</Answer>
      </Question>
    </Level>
    <Level Number="3">
      <Question>
        <Text>Что такое абстрактный класс в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Класс, который содержит хотя бы один абстрактный метод и не может быть инстанциирован</Answer>
        <Answer IsCorrect="false">Класс, который содержит только статические методы</Answer>
        <Answer IsCorrect="false">Класс, который содержит только конструкторы</Answer>
        <Answer IsCorrect="false">Класс, который содержит только статические переменные</Answer>
      </Question>
      <Question>
        <Text>Какой принцип ООП предполагает ограничение доступа к членам класса исключительно через методы класса?</Text>
        <Answer IsCorrect="true">Инкапсуляция</Answer>
        <Answer IsCorrect="false">Наследование</Answer>
        <Answer IsCorrect="false">Полиморфизм</Answer>
      </Question>
      <Question>
        <Text>Какой модификатор доступа позволяет членам класса быть доступными только внутри этого класса и его наследников?</Text>
        <Answer IsCorrect="true">Protected</Answer>
        <Answer IsCorrect="false">Public</Answer>
        <Answer IsCorrect="false">Private</Answer>
      </Question>
      <Question>
        <Text>Какой модификатор доступа позволяет членам класса быть доступными только внутри этого класса?</Text>
        <Answer IsCorrect="true">Private</Answer>
        <Answer IsCorrect="false">Protected</Answer>
        <Answer IsCorrect="false">Public</Answer>
      </Question>
      <Question>
        <Text>Что такое конструктор в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Специальный метод класса, вызываемый при создании экземпляра класса, предназначенный для инициализации объекта</Answer>
        <Answer IsCorrect="false">Метод класса, который вызывается при уничтожении объекта</Answer>
        <Answer IsCorrect="false">Метод класса, который вызывается при обращении к объекту</Answer>
      </Question>
      <Question>
        <Text>Что такое деструктор в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Специальный метод класса, вызываемый при уничтожении объекта, предназначенный для освобождения ресурсов, занятых объектом</Answer>
        <Answer IsCorrect="false">Метод класса, который вызывается при создании экземпляра класса</Answer>
        <Answer IsCorrect="false">Метод класса, который вызывается при обращении к объекту</Answer>
      </Question>
      <Question>
        <Text>Что такое множественное наследование в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Возможность класса наследовать свойства и методы нескольких классов-родителей</Answer>
        <Answer IsCorrect="false">Возможность класса иметь несколько конструкторов</Answer>
        <Answer IsCorrect="false">Возможность класса наследовать свойства и методы только одного класса-родителя</Answer>
      </Question>
      <Question>
        <Text>Что такое иерархия наследования в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Структура, в которой классы организованы в древовидную иерархию, где каждый класс может иметь одного или более предков и одного или более потомков</Answer>
        <Answer IsCorrect="false">Структура, в которой каждый класс имеет только одного предка и одного потомка</Answer>
        <Answer IsCorrect="false">Структура, в которой каждый класс имеет только одного предка</Answer>
      </Question>
      <Question>
        <Text>Что такое композиция в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Включение одного объекта в качестве части другого объекта</Answer>
        <Answer IsCorrect="false">Включение одного класса в качестве члена другого класса</Answer>
        <Answer IsCorrect="false">Включение одного метода в качестве части другого метода</Answer>
      </Question>
      <Question>
        <Text>Что такое агрегация в объектно-ориентированном программировании?</Text>
        <Answer IsCorrect="true">Отношение между объектами, когда один объект является частью другого объекта, но может существовать сам по себе</Answer>
        <Answer IsCorrect="false">Отношение между классами, когда один класс является частью другого класса, но может существовать сам по себе</Answer>
        <Answer IsCorrect="false">Отношение между методами, когда один метод является частью другого метода, но может существовать сам по себе</Answer>
      </Question>
    </Level>
  </Topic>
  <!---->
  <Topic Name="тестытестытесты">
    <Level Number="1">
      <Question>
        <Text>фыв</Text>
        <Answer IsCorrect="true">фыв</Answer>
        <Answer IsCorrect="false">фыв</Answer>
      </Question>
      <Question>
        <Text>вфывфывфыв</Text>
        <Answer IsCorrect="false">фыв</Answer>
        <Answer IsCorrect="false">фыв</Answer>
        <Answer IsCorrect="true">фыв</Answer>
      </Question>
    </Level>
    <Level Number="2">
      <Question>
        <Text>вфывфывфывфывфы</Text>
        <Answer IsCorrect="true">й2у3</Answer>
        <Answer IsCorrect="true">уйц</Answer>
        <Answer IsCorrect="false">уйц</Answer>
      </Question>
      <Question>
        <Text>sad</Text>
        <Answer IsCorrect="true">asd</Answer>
        <Answer IsCorrect="false">ad</Answer>
      </Question>
    </Level>
    <Level Number="3">
      <Question>
        <Text>фывфывфыв</Text>
        <Answer IsCorrect="true">ыфв</Answer>
        <Answer IsCorrect="false">фывфыв</Answer>
      </Question>
    </Level>
  </Topic>
</TestQuestions>